{
	"info": {
		"_postman_id": "8ba46425-8c54-40f1-b11e-a94679a84d4e",
		"name": "back_nest_pokemon_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25670923"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "get all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user by id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "update user by id",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"updatetestuser1\",\r\n  \"password\": \"123456\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"4"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testuser1\",\r\n  \"password\": \"123456\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 500ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields - access_token and refresh_token\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData).to.have.property('access_token');\r",
									"  pm.expect(responseData).to.have.property('refresh_token');\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.access_token).to.be.a('string').and.to.have.length.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Refresh token is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.refresh_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Refresh token should not be empty\");\r",
									"});\r",
									"\r",
									"// Save tokens to environment variables for later use\r",
									"const json = pm.response.json();\r",
									"pm.environment.set(\"accessToken\", json.access_token);\r",
									"pm.environment.set(\"refreshToken\", json.refresh_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testuser1\",\r\n  \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth profile route",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMiIsInN1YiI6MiwiaWF0IjoxNzQ4MzY4ODU4LCJleHAiOjE3NDgzNjk3NTh9.TMLPEDYfZiC7FQomIAlKex1wJHwnXSrQF3sJkoetOb4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/auth/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.access_token).to.exist;\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"\r",
									"  pm.expect(responseData.access_token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Access token should not be empty\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									"const json = pm.response.json();\r",
									"if (json.access_token) {\r",
									"  pm.environment.set(\"accessToken\", json.access_token);\r",
									"}\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMiIsInN1YiI6MiwiaWF0IjoxNzQ4MzY4ODU4LCJleHAiOjE3NDg5NzM2NTh9.jkDUztOcAZ9-5Sty8RSSZAVEwG0JDxaTheluuFQSYds\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/auth/refresh",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "auth profile route (access token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - user, userId, and username\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.user).to.exist.and.to.be.an('object');\r",
									"    pm.expect(responseData.user.userId).to.exist;\r",
									"    pm.expect(responseData.user.username).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response Content-Type is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMiIsInN1YiI6MiwiaWF0IjoxNzQ4MzY4ODU4LCJleHAiOjE3NDgzNjk3NTh9.TMLPEDYfZiC7FQomIAlKex1wJHwnXSrQF3sJkoetOb4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/auth/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMiIsInN1YiI6MiwiaWF0IjoxNzQ4MzY4ODU4LCJleHAiOjE3NDgzNjk3NTh9.TMLPEDYfZiC7FQomIAlKex1wJHwnXSrQF3sJkoetOb4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/auth/logout",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PokéAPI",
			"item": [
				{
					"name": "List all Pokémons (default pagination)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/pokemons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pokemons"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Pokémons with pagination (limit & offset)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/pokemons?limit=10&offset=20",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pokemons"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pokémon by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/pokemons/25",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pokemons",
								"25"
							]
						}
					},
					"response": []
				},
				{
					"name": "List All Pokémons (with pagination)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzQ5OTMwODY4LCJleHAiOjE3NDk5MzE3Njh9.gxVFYp_Rdr9Nu8cG8Ve15oT4gyujVa6PAAvz3JbkKAU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/pokemons",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pokemons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pokémon by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/pokemons/pikachu",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"pokemons",
								"pikachu"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sighted Pokémon",
			"item": [
				{
					"name": "Sighted Pokémons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1MTcwLCJleHAiOjE3NTE0NjYwNzB9.JL9hHCi5mHc6S137wqYkR9do7W-BCFU04fMbVUMUzcQ",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pokemonId\": 1,\r\n  \"region\": \"Kanto\",\r\n  \"level\": 5,\r\n  \"nickname\": \"Pokémon da Le\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/sightings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Sighted Pokémons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1MTcwLCJleHAiOjE3NTE0NjYwNzB9.JL9hHCi5mHc6S137wqYkR9do7W-BCFU04fMbVUMUzcQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/sightings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sighted Pokémons by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1MTcwLCJleHAiOjE3NTE0NjYwNzB9.JL9hHCi5mHc6S137wqYkR9do7W-BCFU04fMbVUMUzcQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/sightings",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update sighted Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1NDM3LCJleHAiOjE3NTE0NjYzMzd9.PH3NHY8pYjZelqHr1WRNw5vsqMtVVbqjzEN74nWI5UQ",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"region\": \"Johto\",\r\n  \"nickname\": \"Pokémon Atualizado\",\r\n  \"level\": 20\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/sightings/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings",
								"11"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete sighted Pkémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1NDk1LCJleHAiOjE3NTE0NjYzOTV9.fue_-azVIpE-7VY_Mbg0K5h9a3z0-lANGFFObYPzEwk",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/sightings/9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings",
								"9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pokémon by id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDY1MzMyLCJleHAiOjE3NTE0NjYyMzJ9.Gk6ELJ_r1Zu3S93sMU4nLEF3ysZmh5jGYYj1X8zr0_A",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/sightings/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"sightings",
								"11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Captured Pokémon",
			"item": [
				{
					"name": "List all captured Pokémons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDA0NTY3LCJleHAiOjE3NTE0MDU0Njd9.grlmEg5hwPWEsYYxNAvB7H4FiKJjKxqvv4UxoPb8qm0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/captured",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"captured"
							]
						}
					},
					"response": []
				},
				{
					"name": "Captured Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDA0NTY3LCJleHAiOjE3NTE0MDU0Njd9.grlmEg5hwPWEsYYxNAvB7H4FiKJjKxqvv4UxoPb8qm0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pokemonId\": 12,\r\n  \"region\": \"Kanto\",\r\n  \"level\": 1,\r\n  \"nickname\": \"Pokémon da Le\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/captured",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"captured"
							]
						}
					},
					"response": []
				},
				{
					"name": "Captured Pokémon by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDA0NTY3LCJleHAiOjE3NTE0MDU0Njd9.grlmEg5hwPWEsYYxNAvB7H4FiKJjKxqvv4UxoPb8qm0",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/captured/58",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"captured",
								"58"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update captured Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDAzOTYxLCJleHAiOjE3NTE0MDQ4NjF9.fLyU6cmknO1jZ6KGBwXlDrOw0fEavMecccu5BlZtWjs",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nickname\": \"Pikachu da Lê Atualizado\",\r\n  \"level\": 15,\r\n  \"region\": \"Johto\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/captured/13",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"captured",
								"13"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete captured Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3R1c2VyMSIsInN1YiI6MSwiaWF0IjoxNzUxNDA0NTY3LCJleHAiOjE3NTE0MDU0Njd9.grlmEg5hwPWEsYYxNAvB7H4FiKJjKxqvv4UxoPb8qm0",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/captured/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"captured",
								"11"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pokémon API - Full Flow - Render Deploy Requests",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testeusuario3\",\r\n  \"password\": \"senha123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/auth/register",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"testeusuario\",\r\n  \"password\": \"senha123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/auth/login",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sighted Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzExNzE1LCJleHAiOjE3NTEzMTI2MTV9.n3n8-0BrS8M9pkCffeh729LtDPODNJdeJu5yP7fcprI",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pokemonId\": 25,\r\n  \"region\": \"Kanto\",\r\n  \"level\": 2,\r\n  \"nickname\": null,\r\n  \"regionImage\": null\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/sightings",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"sightings"
							]
						}
					},
					"response": []
				},
				{
					"name": "List sighted Pokémons",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzExNzE1LCJleHAiOjE3NTEzMTI2MTV9.n3n8-0BrS8M9pkCffeh729LtDPODNJdeJu5yP7fcprI",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/sightings",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"sightings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Captured Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzk1Nzg2LCJleHAiOjE3NTEzOTY2ODZ9.IG_cFjHkwhJd6Q-9DFsRmj2mxoKoavuRt6gmm_X8waU",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pokemonId\": 25,\r\n  \"region\": \"Kanto\",\r\n  \"level\": 12,\r\n  \"nickname\": \"Pikachu da Lê\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/captured",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"captured"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit Captured Pokémon",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzExMjI5LCJleHAiOjE3NTEzMTIxMjl9.TVRtoLwx15WreA4OUs8z2qTA0FZ4MfdFF7V4ml05ztQ",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"pokemonId\": 11,\r\n  \"nickname\": \"Pokemon atualizado\",\r\n  \"region\": \"Kalos\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/captured/19",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"captured",
								"19"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Captured Pokémon",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzk1Nzg2LCJleHAiOjE3NTEzOTY2ODZ9.IG_cFjHkwhJd6Q-9DFsRmj2mxoKoavuRt6gmm_X8waU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/captured",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"captured"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUwMzU2NTg1LCJleHAiOjE3NTAzNTc0ODV9.1z-iWRUNcOJrXK7vE3jnUXwemUK0lbslqJCvJGwqHAk",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/auth/logout",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pokémon Details by ID (PokéAPI)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzg3MTY4LCJleHAiOjE3NTEzODgwNjh9.uCeJ5RuvtEBYmSl86rJwMqVa_d_TrDuH1ZxXKGEQdCM",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/pokemons/1",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"pokemons",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Captured Pokémon Detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3RldXN1YXJpbyIsInN1YiI6MSwiaWF0IjoxNzUxMzk1Nzg2LCJleHAiOjE3NTEzOTY2ODZ9.IG_cFjHkwhJd6Q-9DFsRmj2mxoKoavuRt6gmm_X8waU",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Proxy-Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://back-nest-pokemon-project.onrender.com/captured/28",
							"protocol": "https",
							"host": [
								"back-nest-pokemon-project",
								"onrender",
								"com"
							],
							"path": [
								"captured",
								"28"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}